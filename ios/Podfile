platform :ios, '13.0'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods(File.dirname(File.realpath(__FILE__)))
end

post_install do |installer|
  require 'xcodeproj'

  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)

    # ✅ Fix TOOLCHAIN_DIR
    target.build_configurations.each do |config|
      xcconfig_path = config.base_configuration_reference.real_path
      if File.exist?(xcconfig_path)
        xcconfig = File.read(xcconfig_path)
        xcconfig_mod = xcconfig.gsub(/DT_TOOLCHAIN_DIR/, "TOOLCHAIN_DIR")
        File.write(xcconfig_path, xcconfig_mod)
      end
    end
  end

  # ✅ Fix shellScript = (...) to string
  # project_path = File.join(__dir__, 'Runner.xcodeproj', 'project.pbxproj')
  # if File.exist?(project_path)
  #   text = File.read(project_path)
  #   changed = false
  #   text.gsub!(/shellScript = \((.*?)\);/m) do |_match|
  #     script_lines = $1.strip.split(",\n").map { |line| line.strip.gsub(/^"|"$/, '') }
  #     combined_script = script_lines.join("\\n").gsub('"', '\"')
  #     changed = true
  #     "shellScript = \"#{combined_script}\";"
  #   end

  #   if changed
  #     puts "✅ Fixed shellScript format in project.pbxproj"
  #     File.write(project_path, text)
  #   else
  #     puts "✅ No shellScript array found — nothing to fix"
  #   end
  # end
end
